name: deploy

on:
  workflow_run:
    workflows: ["infrastructure"]
    types:
      - completed

permissions:
  id-token: write
  contents: read

env:
  AZURE_FUNCTIONAPP_NAME: "fn-ai-tg-bot-dev"
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "./src/bot/TelegramAntiSpamBot.Functions"
  DOTNET_VERSION: "9.0.x"
  DOTNET_INSTALL_DIR: "./.dotnet"

jobs:
  build-and-deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Azure login"
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Publish Using Dotnet"
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet publish --configuration Release --os win --arch x64 --output ./output
          popd

      - name: Zip published output
        run: |
          cd output
          zip -r ../app.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: app.zip

      # - name: Deploy to Azure Function App
      #   run: |
      #     az functionapp deployment source config-zip --resource-group ${{ secrets.AZ_TERRAFORM_BACKEND_RESOURCEGROUP }} --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --src app.zip
